package solution

import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test

object Day10Test {

    @Test
    fun `test asteroids detected`() {
        val maps = listOf(MAP_1 to 8, MAP_2 to 33, MAP_3 to 35, MAP_4 to 41, MAP_5 to 210)
        maps.forEach {
            val rows = it.first.split("\n")
            Assertions.assertEquals(Day10.part1(rows), it.second)
        }
    }

    @Test
    fun `test 200th asteroid`() {
        val rows = MAP_5.split("\n")
        Assertions.assertEquals(Day10.part2(rows), 802)
    }
}

const val MAP_1 =
        ".#..#\n" +
        ".....\n" +
        "#####\n" +
        "....#\n" +
        "...##"

const val MAP_2 =
        "......#.#.\n" +
        "#..#.#....\n" +
        "..#######.\n" +
        ".#.#.###..\n" +
        ".#..#.....\n" +
        "..#....#.#\n" +
        "#..#....#.\n" +
        ".##.#..###\n" +
        "##...#..#.\n" +
        ".#....####"

const val MAP_3 =
        "#.#...#.#.\n" +
        ".###....#.\n" +
        ".#....#...\n" +
        "##.#.#.#.#\n" +
        "....#.#.#.\n" +
        ".##..###.#\n" +
        "..#...##..\n" +
        "..##....##\n" +
        "......#...\n" +
        ".####.###."

const val MAP_4 =
        ".#..#..###\n" +
        "####.###.#\n" +
        "....###.#.\n" +
        "..###.##.#\n" +
        "##.##.#.#.\n" +
        "....###..#\n" +
        "..#.#..#.#\n" +
        "#..#.#.###\n" +
        ".##...##.#\n" +
        ".....#.#.."

const val MAP_5 =
        ".#..##.###...#######\n" +
        "##.############..##.\n" +
        ".#.######.########.#\n" +
        ".###.#######.####.#.\n" +
        "#####.##.#.##.###.##\n" +
        "..#####..#.#########\n" +
        "####################\n" +
        "#.####....###.#.#.##\n" +
        "##.#################\n" +
        "#####.##.###..####..\n" +
        "..######..##.#######\n" +
        "####.##.####...##..#\n" +
        ".#####..#.######.###\n" +
        "##...#.##########...\n" +
        "#.##########.#######\n" +
        ".####.#.###.###.#.##\n" +
        "....##.##.###..#####\n" +
        ".#.#.###########.###\n" +
        "#.#.#.#####.####.###\n" +
        "###.##.####.##.#..##"